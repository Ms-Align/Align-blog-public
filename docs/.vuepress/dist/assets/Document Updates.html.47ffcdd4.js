import{_ as n,o as s,c as a,a as t}from"./app.544e4f17.js";const e={},p=t(`<h1 id="document-updates" tabindex="-1"><a class="header-anchor" href="#document-updates" aria-hidden="true">#</a> Document Updates</h1><p>\u5982\u4F55\u4E0E\u5176\u4ED6\u6587\u6863\u540C\u6B65\u3002</p><p>\u5171\u4EAB\u7C7B\u578B\u7684\u4FEE\u6539\u90FD\u88AB\u7F16\u7801\u5E76\u9AD8\u5EA6\u538B\u7F29\u4E3A\u4E8C\u8FDB\u5236\u7684\u6587\u6863\u66F4\u65B0\u6570\u636E\u3002\u6587\u6863\u66F4\u65B0\u662F\u53EF\u4EA4\u6362\u7684\u3001\u5173\u8054\u7684\u548C\u5E42\u7B49\u7684\u3002 \u8FD9\u610F\u5473\u7740\u60A8\u53EF\u4EE5\u6309\u4EFB\u610F\u987A\u5E8F\u591A\u6B21\u5E94\u7528\u5B83\u4EEC\u3002 \u6240\u6709\u5BA2\u6237\u6536\u5230\u6240\u6709\u6587\u6863\u66F4\u65B0\u540E\u90FD\u4F1A\u540C\u6B65\u3002</p><h2 id="update-api" tabindex="-1"><a class="header-anchor" href="#update-api" aria-hidden="true">#</a> Update API</h2><p><strong>Y.applyUpdate(Y.Doc, update:Uint8Array, [transactionOrigin:any])</strong></p><p>\u5E94\u7528\u6587\u6863\u66F4\u65B0\u3002\u540C\u65F6\u53EF\u4EE5\u901A\u8FC7\u914D\u7F6EtransactionOrigin\u6307\u5B9A\u8FC7\u6EE4\u4E8B\u52A1\u7684\u6765\u6E90\uFF0C\u8FD9\u4E9B\u6765\u6E90\u53EF\u4EE5\u901A\u8FC7<code>transaction.origin</code> \u6216\u8005 <code>ydoc.on(&#39;update&#39;, (update, origin) =&gt; ..)</code>\u83B7\u53D6\u5230\u3002</p><p><strong>Y.encodeStateAsUpdate(Y.Doc, [encodedTargetStateVector:Uint8Array]): Uint8Array</strong></p><p>\u5C06\u5F53\u524D\u6587\u6863\u7F16\u7801\u6210\u66F4\u65B0\u6570\u636E\uFF0C\u8FD9\u4E9B\u6570\u636E\u53EF\u88AB\u5176\u4ED6\u6587\u6863\u5E94\u7528\u3002\u901A\u8FC7\u914D\u7F6E<code>encodedTargetStateVector</code>\u53EF\u4EE5\u53EA\u5C06\u4EA7\u751F\u7684\u5DEE\u5F02\u5199\u5165\u66F4\u65B0\u6D88\u606F\u3002</p><p><strong>Y.encodeStateVector(Y.Doc): Uint8Array</strong></p><p>\u8BA1\u7B97\u72B6\u6001\u5411\u91CF\u5E76\u5C06\u5176\u7F16\u7801\u5230 Uint8Array \u4E2D\u3002 \u72B6\u6001\u5411\u91CF\u63CF\u8FF0\u672C\u5730\u5BA2\u6237\u7AEF\u7684\u72B6\u6001\u3002 \u8FDC\u7A0B\u5BA2\u6237\u7AEF\u53EF\u4EE5\u4F7F\u7528\u5B83\u6765\u4EC5\u4EA4\u6362\u7F3A\u5931\u7684\u5DEE\u5F02</p><p><strong>ydoc.on(&#39;update&#39;, eventHandler: function(update: Uint8Array, origin: any, doc: Y.Doc))</strong></p><p>\u6536\u542C Yjs \u6587\u6863\u7684\u589E\u91CF\u66F4\u65B0\u3002 \u8FD9\u662F Y.Doc API \u7684\u4E00\u90E8\u5206\u3002 \u5C06\u8BA1\u7B97\u51FA\u7684\u589E\u91CF\u66F4\u65B0\u53D1\u9001\u5230\u6240\u6709\u8FDE\u63A5\u7684\u5BA2\u6237\u7AEF\uFF0C\u6216\u5C06\u5176\u5B58\u50A8\u5728\u6570\u636E\u5E93\u4E2D\u3002</p><p><strong>Y.logUpdate(Uint8Array)</strong>(experimental)</p><p>\u5C06\u6587\u6863\u66F4\u65B0\u7684\u5185\u5BB9\u8BB0\u5F55\u5230\u63A7\u5236\u53F0\u3002 \u8BE5\u5B9E\u7528\u51FD\u6570\u4EC5\u7528\u4E8E\u8C03\u8BD5\u548C\u7406\u89E3 Yjs \u6587\u6863\u683C\u5F0F\u3002 \u5B83\u88AB\u6807\u8BB0\u4E3A\u5B9E\u9A8C\u6027\u7684\uFF0C\u56E0\u4E3A\u5B83\u53EF\u80FD\u968F\u65F6\u66F4\u6539\u6216\u5220\u9664\u3002</p><h2 id="alternative-update-api" tabindex="-1"><a class="header-anchor" href="#alternative-update-api" aria-hidden="true">#</a> Alternative Update API</h2><p>It is possible to sync clients and compute delta updates without loading the Yjs document to memory. Yjs exposes an API to compute the differences directly on the binary document updates. This allows you to sync efficiently while only maintaining the compressed binary-encoded document state in-memory. Note that this feature only merges document updates and doesn&#39;t garbage-collect deleted content. You still need to load the document to a Y.Doc to reduce the document size.</p><p>\u65E0\u9700\u5C06 Yjs \u6587\u6863\u52A0\u8F7D\u5230\u5185\u5B58\u5373\u53EF\u540C\u6B65\u5BA2\u6237\u7AEF\u5E76\u8BA1\u7B97\u589E\u91CF\u66F4\u65B0\u3002 Yjs \u516C\u5F00\u4E86\u4E00\u4E2A API \u6765\u76F4\u63A5\u8BA1\u7B97\u4E8C\u8FDB\u5236\u6587\u6863\u66F4\u65B0\u7684\u5DEE\u5F02\u3002 \u8FD9\u4F7F\u60A8\u53EF\u4EE5\u9AD8\u6548\u540C\u6B65\uFF0C\u540C\u65F6\u4EC5\u5728\u5185\u5B58\u4E2D\u7EF4\u62A4\u538B\u7F29\u7684\u4E8C\u8FDB\u5236\u7F16\u7801\u6587\u6863\u72B6\u6001\u3002 \uFF08\u53C2\u89C1\u793A\u4F8B\uFF09 \u8BF7\u6CE8\u610F\uFF0C\u6B64\u529F\u80FD\u4EC5\u5408\u5E76\u6587\u6863\u66F4\u65B0\uFF0C\u4E0D\u4F1A\u5BF9\u5DF2\u5220\u9664\u7684\u5185\u5BB9\u8FDB\u884C\u5783\u573E\u6536\u96C6\u3002 \u60A8\u4ECD\u7136\u9700\u8981\u5C06\u6587\u6863\u52A0\u8F7D\u5230 Y.Doc \u4EE5\u51CF\u5C0F\u6587\u6863\u5927\u5C0F\u3002</p><p><strong>Y.mergeUpdates(Uint8Array[]): Uint8Array</strong></p><p>\u5C06\u591A\u4E2A\u6587\u6863\u66F4\u65B0\u5408\u5E76\u4E3A\u5355\u4E2A\u6587\u6863\u66F4\u65B0\uFF0C\u540C\u65F6\u5220\u9664\u91CD\u590D\u4FE1\u606F\u3002 \u7531\u4E8E\u538B\u7F29\u7F16\u7801\uFF0C\u5408\u5E76\u7684\u6587\u6863\u66F4\u65B0\u59CB\u7EC8\u5C0F\u4E8E\u5355\u72EC\u7684\u66F4\u65B0\u3002</p><p><strong>Y.encodeStateVectorFromUpdate(Uint8Array): Uint8Array</strong></p><p>\u6839\u636E\u6587\u6863\u66F4\u65B0\u8BA1\u7B97\u72B6\u6001\u5411\u91CF\u5E76\u5C06\u5176\u7F16\u7801\u5230 Uint8Array \u4E2D\u3002</p><p><strong>Y.diffUpdate(update: Uint8Array, stateVector: Uint8Array): Uint8Array</strong></p><p>Encode the missing differences to another update message. This function works similarly to <code>Y.encodeStateAsUpdate(ydoc, stateVector)</code> but works on updates instead.</p><p>\u5C06\u7F3A\u5931\u7684\u5DEE\u5F02\u7F16\u7801\u4E3A\u53E6\u4E00\u6761\u66F4\u65B0\u6D88\u606F\u3002 \u6B64\u51FD\u6570\u7684\u5DE5\u4F5C\u65B9\u5F0F\u4E0E Y.encodeStateAsUpdate(ydoc, stateVector) \u7C7B\u4F3C\uFF0C\u4F46\u9002\u7528\u4E8E\u66F4\u65B0\u3002</p><h2 id="examples" tabindex="-1"><a class="header-anchor" href="#examples" aria-hidden="true">#</a> Examples</h2><h3 id="example-listen-to-update-events-and-apply-them-on-a-remote-client" tabindex="-1"><a class="header-anchor" href="#example-listen-to-update-events-and-apply-them-on-a-remote-client" aria-hidden="true">#</a> Example: Listen to update events and apply them on a remote client</h3><p>\u76D1\u542C\u66F4\u65B0\u4E8B\u4EF6\u5E76\u5C06\u66F4\u65B0\u5E94\u7528\u5230\u8FDC\u7A0B\u5BA2\u6237\u7AEF\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> doc1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Y<span class="token punctuation">.</span>Doc</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> doc2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Y<span class="token punctuation">.</span>Doc</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

doc1<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;update&#39;</span><span class="token punctuation">,</span> <span class="token parameter">update</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token constant">Y</span><span class="token punctuation">.</span><span class="token function">applyUpdate</span><span class="token punctuation">(</span>doc2<span class="token punctuation">,</span> update<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

doc2<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;update&#39;</span><span class="token punctuation">,</span> <span class="token parameter">update</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token constant">Y</span><span class="token punctuation">.</span><span class="token function">applyUpdate</span><span class="token punctuation">(</span>doc1<span class="token punctuation">,</span> update<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">// All changes are also applied to the other document</span>
doc1<span class="token punctuation">.</span><span class="token function">getArray</span><span class="token punctuation">(</span><span class="token string">&#39;myarray&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&#39;Hello doc2, you got this?&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
doc2<span class="token punctuation">.</span><span class="token function">getArray</span><span class="token punctuation">(</span><span class="token string">&#39;myarray&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token comment">// =&gt; &#39;Hello doc2, you got this?&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD8\u53EF\u4EE5\u901A\u8FC7\u6765\u6307\u5B9A\u4E8B\u52A1\u6765\u6E90\u3002\u5BF9\u6765\u6E90\u7684\u6570\u636E\u8FC7\u53BB\u53BB\u9664\u4E00\u4E9B\u5197\u4F59\u7684\u6570\u636E\u5305\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>doc1<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;update&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">update<span class="token punctuation">,</span> origin</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>origin <span class="token operator">!==</span> <span class="token string">&#39;doc1&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment">//\u6765\u81EA\u81EA\u8EAB\u7684\u5197\u4F59\u6570\u636E\u5305</span>
    <span class="token keyword">return</span>
  <span class="token punctuation">}</span>
  <span class="token constant">Y</span><span class="token punctuation">.</span><span class="token function">applyUpdate</span><span class="token punctuation">(</span>doc2<span class="token punctuation">,</span> update<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

doc2<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;update&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">update<span class="token punctuation">,</span> origin</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>origin <span class="token operator">!==</span> <span class="token string">&#39;doc2&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment">//\u6765\u81EA\u81EA\u8EAB\u7684\u5197\u4F59\u5305</span>
    <span class="token keyword">return</span>
  <span class="token punctuation">}</span>
  <span class="token constant">Y</span><span class="token punctuation">.</span><span class="token function">applyUpdate</span><span class="token punctuation">(</span>doc1<span class="token punctuation">,</span> update<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

doc1<span class="token punctuation">.</span><span class="token function">transact</span><span class="token punctuation">(</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  doc1<span class="token punctuation">.</span><span class="token function">getArray</span><span class="token punctuation">(</span><span class="token string">&#39;myarray&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&#39;Hello doc2, you got this?&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">&#39;doc1&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="syncing-clients-\u540C\u6B65\u5BA2\u6237\u7AEF" tabindex="-1"><a class="header-anchor" href="#syncing-clients-\u540C\u6B65\u5BA2\u6237\u7AEF" aria-hidden="true">#</a> Syncing clients(\u540C\u6B65\u5BA2\u6237\u7AEF)</h3><p>Yjs internally maintains a state vector that denotes the next expected clock from each client. In a different interpretation, it holds the number of modifications created by each client. When two clients sync, you can either exchange the complete document structure or only the differences by sending the state vector to compute the differences.</p><p>Yjs \u5185\u90E8\u7EF4\u62A4\u4E00\u4E2A\u72B6\u6001\u5411\u91CF\uFF0C\u8868\u793A\u6BCF\u4E2A\u5BA2\u6237\u7AEF\u7684\u4E0B\u4E00\u4E2A\u9884\u671F\u65F6\u949F\u3002 \u5728\u4E0D\u540C\u7684\u89E3\u91CA\u4E2D\uFF0C\u5B83\u4FDD\u5B58\u6BCF\u4E2A\u5BA2\u6237\u7AEF\u521B\u5EFA\u7684\u4FEE\u6539\u7684\u6570\u91CF\u3002 \u5F53\u4E24\u4E2A\u5BA2\u6237\u7AEF\u540C\u6B65\u65F6\uFF0C\u60A8\u53EF\u4EE5\u4EA4\u6362\u5B8C\u6574\u7684\u6587\u6863\u7ED3\u6784\uFF0C\u4E5F\u53EF\u4EE5\u901A\u8FC7\u53D1\u9001\u72B6\u6001\u5411\u91CF\u6765\u8BA1\u7B97\u5DEE\u5F02\uFF0C\u4EC5\u4EA4\u6362\u5DEE\u5F02\u3002</p><h4 id="example-sync-two-clients-by-exchanging-the-complete-document-structure" tabindex="-1"><a class="header-anchor" href="#example-sync-two-clients-by-exchanging-the-complete-document-structure" aria-hidden="true">#</a> Example: Sync two clients by exchanging the complete document structure</h4><p>\u901A\u8FC7\u4EA4\u6362\u4E24\u4E2A\u5B8C\u6574\u7684\u6587\u6863\u6765\u540C\u6B65\u6570\u636E</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> state1 <span class="token operator">=</span> <span class="token constant">Y</span><span class="token punctuation">.</span><span class="token function">encodeStateAsUpdate</span><span class="token punctuation">(</span>ydoc1<span class="token punctuation">)</span>
<span class="token keyword">const</span> state2 <span class="token operator">=</span> <span class="token constant">Y</span><span class="token punctuation">.</span><span class="token function">encodeStateAsUpdate</span><span class="token punctuation">(</span>ydoc2<span class="token punctuation">)</span>
<span class="token constant">Y</span><span class="token punctuation">.</span><span class="token function">applyUpdate</span><span class="token punctuation">(</span>ydoc1<span class="token punctuation">,</span> state2<span class="token punctuation">)</span>
<span class="token constant">Y</span><span class="token punctuation">.</span><span class="token function">applyUpdate</span><span class="token punctuation">(</span>ydoc2<span class="token punctuation">,</span> state1<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="example-sync-two-clients-by-computing-the-differences" tabindex="-1"><a class="header-anchor" href="#example-sync-two-clients-by-computing-the-differences" aria-hidden="true">#</a> Example: Sync two clients by computing the differences</h4><p>\u901A\u8FC7\u6BD4\u8F83\u4E24\u4E2A\u6587\u6863\u7684\u5DEE\u5F02\u6765\u540C\u6B65\u6570\u636E\u3002</p><p>This example shows how to sync two clients with a minimal amount of data exchanged by computing the differences using the state vector of the remote client. Syncing clients using the state vector requires another roundtrip but can save a lot of bandwidth.</p><p>\u793A\u4F8B\u6F14\u793A\u5982\u4F55\u901A\u8FC7\u4F7F\u7528\u8FDC\u7A0B\u5BA2\u6237\u7AEF\u7684\u72B6\u6001\u5411\u91CF\u8BA1\u7B97\u5DEE\u5F02\u6765\u540C\u6B65\u4E24\u4E2A\u5BA2\u6237\u7AEF\uFF0C\u5E76\u4EE5\u6700\u5C11\u91CF\u7684\u6570\u636E\u4EA4\u6362\u8FDB\u884C\u540C\u6B65\u3002 \u4F7F\u7528\u72B6\u6001\u5411\u91CF\u540C\u6B65\u5BA2\u6237\u7AEF\u9700\u8981\u53E6\u4E00\u6B21\u5F80\u8FD4\uFF0C\u4F46\u53EF\u4EE5\u8282\u7701\u5927\u91CF\u5E26\u5BBD\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> stateVector1 <span class="token operator">=</span> <span class="token constant">Y</span><span class="token punctuation">.</span><span class="token function">encodeStateVector</span><span class="token punctuation">(</span>ydoc1<span class="token punctuation">)</span>
<span class="token keyword">const</span> stateVector2 <span class="token operator">=</span> <span class="token constant">Y</span><span class="token punctuation">.</span><span class="token function">encodeStateVector</span><span class="token punctuation">(</span>ydoc2<span class="token punctuation">)</span>
<span class="token keyword">const</span> diff1 <span class="token operator">=</span> <span class="token constant">Y</span><span class="token punctuation">.</span><span class="token function">encodeStateAsUpdate</span><span class="token punctuation">(</span>ydoc1<span class="token punctuation">,</span> stateVector2<span class="token punctuation">)</span>
<span class="token keyword">const</span> diff2 <span class="token operator">=</span> <span class="token constant">Y</span><span class="token punctuation">.</span><span class="token function">encodeStateAsUpdate</span><span class="token punctuation">(</span>ydoc2<span class="token punctuation">,</span> stateVector1<span class="token punctuation">)</span>
<span class="token constant">Y</span><span class="token punctuation">.</span><span class="token function">applyUpdate</span><span class="token punctuation">(</span>ydoc1<span class="token punctuation">,</span> diff2<span class="token punctuation">)</span>
<span class="token constant">Y</span><span class="token punctuation">.</span><span class="token function">applyUpdate</span><span class="token punctuation">(</span>ydoc2<span class="token punctuation">,</span> diff1<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="example-syncing-clients-without-loading-the-y-doc" tabindex="-1"><a class="header-anchor" href="#example-syncing-clients-without-loading-the-y-doc" aria-hidden="true">#</a> Example: Syncing clients without loading the Y.Doc</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u5C06\u5F53\u524D\u6587\u6863\u8F6C\u5316\u4E3A\u4E8C\u8FDB\u5236\u683C\u5F0F</span>
<span class="token keyword">let</span> currentState1 <span class="token operator">=</span> <span class="token constant">Y</span><span class="token punctuation">.</span><span class="token function">encodeStateAsUpdate</span><span class="token punctuation">(</span>ydoc1<span class="token punctuation">)</span>
<span class="token keyword">let</span> currentState2 <span class="token operator">=</span> <span class="token constant">Y</span><span class="token punctuation">.</span><span class="token function">encodeStateAsUpdate</span><span class="token punctuation">(</span>ydoc2<span class="token punctuation">)</span>

<span class="token comment">// \u73B0\u5728\u5373\u4F7F\u6211\u4EEC\u6CA1\u6709\u6587\u6863\u5B9E\u4F8B\u4E5F\u53EF\u4EE5\u8FDB\u884C\u6570\u636E\u540C\u6B65</span>
ydoc1<span class="token punctuation">.</span><span class="token function">destroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
ydoc2<span class="token punctuation">.</span><span class="token function">destroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment">//\u83B7\u5F97\u51FA\u4E24\u4E2A\u6587\u6863\u7684\u72B6\u6001\u5411\u91CF</span>
<span class="token keyword">const</span> stateVector1 <span class="token operator">=</span> <span class="token constant">Y</span><span class="token punctuation">.</span><span class="token function">encodeStateVectorFromUpdate</span><span class="token punctuation">(</span>currentState1<span class="token punctuation">)</span>
<span class="token keyword">const</span> stateVector2 <span class="token operator">=</span> <span class="token constant">Y</span><span class="token punctuation">.</span><span class="token function">encodeStateVectorFromUpdate</span><span class="token punctuation">(</span>currentState2<span class="token punctuation">)</span>

<span class="token comment">//\u8BA1\u7B97\u51FA\u4E24\u4E2A\u6587\u6863\u4E4B\u95F4\u7684\u5DEE\u5F02</span>
<span class="token keyword">const</span> diff1 <span class="token operator">=</span> <span class="token constant">Y</span><span class="token punctuation">.</span><span class="token function">diffUpdate</span><span class="token punctuation">(</span>currentState1<span class="token punctuation">,</span> stateVector2<span class="token punctuation">)</span>
<span class="token keyword">const</span> diff2 <span class="token operator">=</span> <span class="token constant">Y</span><span class="token punctuation">.</span><span class="token function">diffUpdate</span><span class="token punctuation">(</span>currentState2<span class="token punctuation">,</span> stateVector1<span class="token punctuation">)</span>

<span class="token comment">// \u540C\u6B65\u5BA2\u6237\u7AEF</span>
currentState1 <span class="token operator">=</span> <span class="token constant">Y</span><span class="token punctuation">.</span><span class="token function">mergeUpdates</span><span class="token punctuation">(</span><span class="token punctuation">[</span>currentState1<span class="token punctuation">,</span> diff2<span class="token punctuation">]</span><span class="token punctuation">)</span>
currentState2 <span class="token operator">=</span> <span class="token constant">Y</span><span class="token punctuation">.</span><span class="token function">mergeUpdates</span><span class="token punctuation">(</span><span class="token punctuation">[</span>currentState2<span class="token punctuation">,</span> diff1<span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="example-base64-encoding-base64\u7F16\u7801" tabindex="-1"><a class="header-anchor" href="#example-base64-encoding-base64\u7F16\u7801" aria-hidden="true">#</a> Example: Base64 encoding(Base64\u7F16\u7801)</h3><p>We compress document updates to a highly compressed binary format. Therefore, document updates are represented as Uint8Arrays. An Uint8Array represents binary data similarly to a NodeJS&#39; Buffer . The difference is that Uint8Array is available in all JavaScript environments. The catch is that you can&#39;t JSON.stringify/JSON.parse the data because there is no JSON representation for binary data. However, most communication protocols support binary data. If you still need to transform the data into a string, you can use Base64 encoding. For example, by using the js-base64 library.</p><p>\u6211\u4EEC\u5C06\u6587\u6863\u66F4\u65B0\u538B\u7F29\u4E3A\u9AD8\u5EA6\u538B\u7F29\u7684\u4E8C\u8FDB\u5236\u683C\u5F0F\u3002 \u56E0\u6B64\uFF0C\u6587\u6863\u66F4\u65B0\u8868\u793A\u4E3A Uint8Arrays\u3002 Uint8Array \u8868\u793A\u4E8C\u8FDB\u5236\u6570\u636E\uFF0C\u7C7B\u4F3C\u4E8E NodeJS \u7684 Buffer \u3002 \u4E0D\u540C\u4E4B\u5904\u5728\u4E8E Uint8Array \u5728\u6240\u6709 JavaScript \u73AF\u5883\u4E2D\u90FD\u53EF\u7528\u3002 \u95EE\u9898\u662F\u60A8\u65E0\u6CD5 JSON.stringify/JSON.parse \u6570\u636E\uFF0C\u56E0\u4E3A\u4E8C\u8FDB\u5236\u6570\u636E\u6CA1\u6709 JSON \u8868\u793A\u5F62\u5F0F\u3002 \u7136\u800C\uFF0C\u5927\u591A\u6570\u901A\u4FE1\u534F\u8BAE\u90FD\u652F\u6301\u4E8C\u8FDB\u5236\u6570\u636E\u3002 \u5982\u679C\u4ECD\u9700\u8981\u5C06\u6570\u636E\u8F6C\u6362\u4E3A\u5B57\u7B26\u4E32\uFF0C\u53EF\u4EE5\u4F7F\u7528 Base64 \u7F16\u7801\u3002 \u4F8B\u5982\uFF0C\u901A\u8FC7\u4F7F\u7528 js-base64 \u5E93</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> fromUint8Array<span class="token punctuation">,</span> toUint8Array <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;js-base64&#39;</span>

<span class="token keyword">const</span> documentState <span class="token operator">=</span> <span class="token constant">Y</span><span class="token punctuation">.</span><span class="token function">encodeStateAsUpdate</span><span class="token punctuation">(</span>ydoc<span class="token punctuation">)</span> <span class="token comment">// is a Uint8Array</span>
<span class="token comment">// Transform Uint8Array to a Base64-String</span>
<span class="token keyword">const</span> base64Encoded <span class="token operator">=</span> <span class="token function">fromUint8Array</span><span class="token punctuation">(</span>documentState<span class="token punctuation">)</span>
<span class="token comment">// Transform Base64-String back to an Uint8Array</span>
<span class="token keyword">const</span> binaryEncoded <span class="token operator">=</span> <span class="token function">toUint8Array</span><span class="token punctuation">(</span>base64Encoded<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="example-building-a-custom-provider" tabindex="-1"><a class="header-anchor" href="#example-building-a-custom-provider" aria-hidden="true">#</a> Example: Building a custom provider</h3><p>\u6784\u5EFA\u4E00\u4E2A\u63D0\u4F9B\u8005\u3002</p><p>A &quot;provider&quot; is what connects a Yjs document to other clients (through a network) or that synchronizes a document with a database. The section syncing clients explains several concepts to sync a Yjs document with another client or server. Once the initial states are synchronized, we want to synchronize incremental updates by listening to the update and forwarding them to the other clients. We can use the concept of transaction origin to determine whether we need to forward a document update to the database/network. I recommend using the following template for custom provider implementation.</p><p>\u201C\u63D0\u4F9B\u8005\u201D\u662F\u5C06 Yjs \u6587\u6863\u8FDE\u63A5\u5230\u5176\u4ED6\u5BA2\u6237\u7AEF\uFF08\u901A\u8FC7\u7F51\u7EDC\uFF09\u6216\u5C06\u6587\u6863\u4E0E\u6570\u636E\u5E93\u540C\u6B65\u7684\u4E1C\u897F\u3002 \u540C\u6B65\u5BA2\u6237\u7AEF\u90E8\u5206\u89E3\u91CA\u4E86\u5C06 Yjs \u6587\u6863\u4E0E\u53E6\u4E00\u4E2A\u5BA2\u6237\u7AEF\u6216\u670D\u52A1\u5668\u540C\u6B65\u7684\u51E0\u4E2A\u6982\u5FF5\u3002 \u4E00\u65E6\u521D\u59CB\u72B6\u6001\u540C\u6B65\uFF0C\u6211\u4EEC\u5E0C\u671B\u901A\u8FC7\u76D1\u542C\u66F4\u65B0\u5E76\u5C06\u5176\u8F6C\u53D1\u5230\u5176\u4ED6\u5BA2\u6237\u7AEF\u6765\u540C\u6B65\u589E\u91CF\u66F4\u65B0\u3002 \u6211\u4EEC\u53EF\u4EE5\u4F7F\u7528\u4E8B\u52A1\u8D77\u6E90\u7684\u6982\u5FF5\u6765\u786E\u5B9A\u662F\u5426\u9700\u8981\u5C06\u6587\u6863\u66F4\u65B0\u8F6C\u53D1\u5230\u6570\u636E\u5E93/\u7F51\u7EDC\u3002 \u6211\u5EFA\u8BAE\u4F7F\u7528\u4EE5\u4E0B\u6A21\u677F\u6765\u5B9E\u73B0\u81EA\u5B9A\u4E49\u63D0\u4F9B\u7A0B\u5E8F\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> <span class="token constant">Y</span> <span class="token keyword">from</span> <span class="token string">&#39;yjs&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Observable <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;lib0/observable&#39;</span>

<span class="token keyword">class</span> <span class="token class-name">Provider</span> <span class="token keyword">extends</span> <span class="token class-name">Observable</span> <span class="token punctuation">{</span>
  <span class="token doc-comment comment">/**
   * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>Y<span class="token punctuation">.</span>Doc<span class="token punctuation">}</span></span> <span class="token parameter">ydoc</span>
   */</span>
  <span class="token function">constructor</span> <span class="token punctuation">(</span><span class="token parameter">ydoc</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token comment">//\u76D1\u542C\u672C\u5730\u6587\u6863\u72B6\u6001\u53D8\u5316</span>
    ydoc<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;update&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">update<span class="token punctuation">,</span> origin</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u5FFD\u89C6\u81EA\u8EAB\u7684\u66F4\u65B0\u4FE1\u606F</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>origin <span class="token operator">!==</span> <span class="token keyword">this</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// this update was produced either locally or by another provider. </span>
        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">emit</span><span class="token punctuation">(</span><span class="token string">&#39;update&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>update<span class="token punctuation">]</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token comment">// \u76D1\u542C\u8FDC\u7A0B\u6570\u636E\u53D8\u5316</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;update&#39;</span><span class="token punctuation">,</span> <span class="token parameter">update</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token constant">Y</span><span class="token punctuation">.</span><span class="token function">applyUpdate</span><span class="token punctuation">(</span>ydoc<span class="token punctuation">,</span> update<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">)</span> <span class="token comment">// the third parameter sets the transaction-origin</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token comment">//..</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Note that this is not the only way to filter updates. You could also use a isLocal flag or use a lib0/mutex. However, it is recommended that all providers set the transaction origin which makes it easier for developers to debug where an update comes from.</p><p>\u8BF7\u6CE8\u610F\uFF0C\u8FD9\u4E0D\u662F\u8FC7\u6EE4\u66F4\u65B0\u7684\u552F\u4E00\u65B9\u6CD5\u3002 \u60A8\u8FD8\u53EF\u4EE5\u4F7F\u7528 isLocal \u6807\u5FD7\u6216\u4F7F\u7528 lib0/mutex\u3002 \u4F46\u662F\uFF0C\u5EFA\u8BAE\u6240\u6709\u63D0\u4F9B\u5546\u8BBE\u7F6E\u4E8B\u52A1\u6765\u6E90\uFF0C\u4EE5\u4FBF\u5F00\u53D1\u4EBA\u5458\u66F4\u5BB9\u6613\u8C03\u8BD5\u66F4\u65B0\u7684\u6765\u6E90\u3002</p>`,54),o=[p];function c(i,l){return s(),a("div",null,o)}var r=n(e,[["render",c],["__file","Document Updates.html.vue"]]);export{r as default};
