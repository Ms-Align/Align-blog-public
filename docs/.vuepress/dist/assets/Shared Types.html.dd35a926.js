import{_ as o,r as c,o as l,c as i,b as a,d as t,w as e,a as p,e as n}from"./app.544e4f17.js";const u={},r=p(`<h1 id="\u5171\u4EAB\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#\u5171\u4EAB\u7C7B\u578B" aria-hidden="true">#</a> \u5171\u4EAB\u7C7B\u578B</h1><p>\u4E4B\u524D\u8BF4\u8FC7\u8981\u4F7F\u6570\u636E\u80FD\u88AByjs\u5904\u7406\u5C31\u5FC5\u987B\u9075\u5B88yjs\u6570\u636E\u7684\u89C4\u8303\uFF0C\u5171\u4EAB\u7C7B\u578B\u5C31\u662Fyjs\u63D0\u4F9B\u7684\u5929\u7136\u652F\u6301\u8FD9\u4E9B\u89C4\u8303\u7684\u6570\u636E\u683C\u5F0F\uFF0C\u6587\u6863\u6570\u636E\u7684\u7ED3\u6784\u5E94\u5F53\u57FA\u4E8E\u8FD9\u4E9B\u6570\u636E\u7C7B\u578B\u6765\u6784\u5EFA\u3002</p><h2 id="y-map" tabindex="-1"><a class="header-anchor" href="#y-map" aria-hidden="true">#</a> Y.Map</h2><p><em>\u63D0\u4F9B\u4E0Emap\u7C7B\u578B\u76F8\u4F3C\u7684\u516C\u5171</em></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> <span class="token constant">Y</span> <span class="token keyword">from</span> <span class="token string">&#39;yjs&#39;</span>

<span class="token comment">//\u521B\u5EFA\u6587\u6863</span>
<span class="token keyword">const</span> ydoc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Y<span class="token punctuation">.</span>Doc</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment">// Y.Map(\u4E0B\u7B80\u79F0map\u6216\u5171\u4EABmap)\u53EF\u4EE5\u5B9A\u4E49\u4E3A\u9876\u5C42\u6216\u8005\u5D4C\u5957\u7684\u7C7B\u578B</span>

<span class="token comment">// Method 1: \u5728\u6587\u6863\u9876\u7EA7\uFF0C\u5B9A\u4E49\u4E00\u4E2A\u5171\u4EABmap</span>
<span class="token keyword">const</span> ymap <span class="token operator">=</span> ydoc<span class="token punctuation">.</span><span class="token function">getMap</span><span class="token punctuation">(</span><span class="token string">&#39;my map type&#39;</span><span class="token punctuation">)</span>

<span class="token comment">// Method 2: \u521B\u5EFA\u4E00\u4E2A \u5171\u4EABmap</span>
<span class="token keyword">const</span> ymapNested <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Y<span class="token punctuation">.</span>Map</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment">// \u5C06\u5171\u4EABmap\u5B58\u5230ymap\u4E2D</span>
ymap<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&#39;my nested map&#39;</span><span class="token punctuation">,</span> ymapNested<span class="token punctuation">)</span>

<span class="token comment">// \u5E38\u7528\u65B9\u6CD5</span>
ymap<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&#39;prop-name&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;value&#39;</span><span class="token punctuation">)</span> <span class="token comment">// \u503C\u53EF\u4EE5\u662Fjson</span>
ymap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;prop-name&#39;</span><span class="token punctuation">)</span> <span class="token comment">// =&gt; &#39;value&#39;</span>
ymap<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span><span class="token string">&#39;prop-name&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="api" tabindex="-1"><a class="header-anchor" href="#api" aria-hidden="true">#</a> API</h3><p><strong>ymap.doc: Y.Doc | null</strong> (readonly)</p><p>\u5F53\u524Dmap\u7ED1\u5B9A\u5230\u7684\u6587\u6863\u5BF9\u8C61\uFF0C\u672A\u7ED1\u5B9A\u65F6\u4E3Anull</p><p><strong>ymap.parent: Y.AbstractType | null</strong></p><p>\u5F53\u524Dmap\u7684\u7236\u7EA7\uFF0C\u5982\u679C\u5F53\u524Dmap\u5728\u6587\u6863\u7684\u9876\u7EA7\u5219\u8BE5\u503C\u4E3Anull</p><p><strong>ymap.set(key: string, value: object|boolean|string|number|Uint8Array|Y.AbstractType)</strong></p><p>\u8BBE\u7F6E\u503C\uFF0C\u503C\u7C7B\u578B\u53EF\u4EE5\u662Fshared type, Uint8Array, JSON-encodable.</p><p><strong>ymap.get(key: string): object|boolean|Array|string|number|Uint8Array|Y.AbstractType</strong></p><p>\u83B7\u53D6map\u503C</p><p><strong>ymap.delete(key: string)</strong></p><p>\u5220\u9664</p><p><strong>ymap.has(key: string): boolean</strong></p><p>\u5224\u65ADmap\u4E2D\u662F\u5426\u5B58\u5728\u67D0\u503C</p><p><strong>ymap.toJSON(): Object&lt;string,object|boolean|Array|string|number|Uint8Array&gt;</strong></p><p>\u5C06\u5F53\u524Dmap\u8F6C\u6362\u6210JSON\u5BF9\u8C61</p><p><strong>ymap.size: number</strong></p><p>\u8FD4\u56DE\u952E\u503C\u5BF9\u7684\u4E2A\u6570</p><p><strong>ymap.forEach(value: any, key: string, map: Y.Map)</strong></p><p>\u5BF9\u6BCF\u4E2A\u952E\u503C\u5BF9\u8C03\u7528\u63D0\u4F9B\u7684\u51FD\u6570</p><p><strong>ymap[Symbol.Iterator]: Iterator</strong></p><p>\u8FD4\u56DE\u4E00\u4E2A\u6210\u5458\u4E3A[key, value]\u6570\u7EC4\u7684\u8FED\u4EE3\u5668. \u5141\u8BB8\u4F60\u4F7F\u7528for ... of ...\u5FAA\u73AF\u8FED\u4EE3\u6570\u636E\uFF0C\u6BD4\u5982: for (const [key, value] of ymap) { .. }</p><p><strong>ymap.entries(): Iterator</strong></p><p>\u8FD4\u56DE\u4E00\u4E2A\u6210\u5458\u4E3A[key, value]\u6570\u7EC4\u7684\u8FED\u4EE3\u5668(\u548C\u4E0A\u9762\u7684\u6709\u5565\u533A\u522B\u5B98\u65B9\u4E5F\u6CA1\u8BF4)</p><p><strong>ymap.values(): Iterator</strong></p><p>\u8FD4\u56DE\u4E00\u4E2A\u53EA\u5305\u542B\u503C\u7684\u8FED\u4EE3\u5668. \u8FD9\u5141\u8BB8\u4F60\u53EA\u8FED\u4EE3\u503C: (const value of ymap.values()) { ... }\uFF0C\u6216\u8005\u5C06\u6240\u6709\u7684\u503C\u8F6C\u6362\u6210\u4E00\u4E2A\u6570\u7EC4: Array.from(ymap.values()).</p><p><strong>ymap.keys(): Iterator</strong></p><p>\u548C\u4E0A\u8FB9\u7684\u4E00\u6837\uFF0C\u4E0D\u8FC7\u662F\u53EA\u8FD4\u56DE\u952E\u3002</p><p><strong>ymap.clone(): Y.Map</strong></p><p>\u514B\u9686\u4E00\u4E2A\u65B0\u7684\u5171\u4EABmap</p><p><strong>ymap.observe(function(YMapEvent, Transaction))</strong></p><p>\u5BF9\u5F53\u524Dmap\u6DFB\u52A0\u4E00\u4E2A\u76D1\u542C\u4E8B\u4EF6\u56DE\u8C03\uFF0C\u6BCF\u6B21map\u88AB\u6539\u53D8\u65F6\u90FD\u4F1A\u540C\u6B65 \u89E6\u53D1\u8BE5\u76D1\u542C\u3002\u5982\u679C\u5728\u76D1\u542C\u56DE\u8C03\u4E2D\u4FEE\u6539\u4E86map\uFF0C\u5219\u6267\u884C\u5B8C\u5F53\u524D\u56DE\u8C03\u540E\u5C06\u4F1A\u518D\u6B21\u89E6\u53D1\u8BE5\u4E8B\u4EF6\u3002</p><p><strong>ymap.unobserve(function)</strong></p><p>\u6CE8\u9500\u6DFB\u52A0\u7684\u4E8B\u4EF6\u76D1\u542C\u56DE\u8C03</p><p><strong>ymap.observeDeep(function(Array&lt;Y.Event&gt;, Transaction))</strong></p><p>\u521B\u5EFA\u4E00\u4E2A\u7ED1\u5B9A\u4E00\u4E2A\u6DF1\u5C42\u76D1\u542C\u51FD\u6570\u3002map\u4E0B\u7684\u5176\u4ED6\u5171\u4EAB\u7C7B\u578B\u88AB\u4FEE\u6539\u65F6\u540C\u6837\u4F1A\u89E6\u53D1\u56DE\u8C03\u6267\u884C\u3002\u5982\u679C\u5728\u76D1\u542C\u56DE\u8C03\u4E2D\u4FEE\u6539\u4E86map\uFF0C\u5219\u6267\u884C\u5B8C\u5F53\u524D\u56DE\u8C03\u540E\u5C06\u4F1A\u518D\u6B21\u89E6\u53D1\u8BE5\u4E8B\u4EF6\u3002 \u540C\u65F6\u53C2\u6570\u4E2D\u4F1A\u63A5\u6536\u5230\u81EA\u8EAB\u5305\u62EC\u5B50\u5143\u7D20\u7684\u4E8B\u4EF6\u3002</p><p><strong>ymap.unobserveDeep(function)</strong></p><p>\u6CE8\u9500\u6DFB\u52A0\u7684\u6DF1\u5C42\u76D1\u542C\u56DE\u8C03</p><h3 id="\u901A\u8FC7\u4E00\u4E2A\u793A\u4F8B\u6765\u4E86\u89E3observe\u7684\u4F7F\u7528" tabindex="-1"><a class="header-anchor" href="#\u901A\u8FC7\u4E00\u4E2A\u793A\u4F8B\u6765\u4E86\u89E3observe\u7684\u4F7F\u7528" aria-hidden="true">#</a> \u901A\u8FC7\u4E00\u4E2A\u793A\u4F8B\u6765\u4E86\u89E3observe\u7684\u4F7F\u7528</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>ymap<span class="token punctuation">.</span><span class="token function">observe</span><span class="token punctuation">(</span><span class="token parameter">ymapEvent</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">//\u83B7\u53D6\u89E6\u53D1\u5BF9\u8C61</span>
  ymapEvent<span class="token punctuation">.</span>target <span class="token operator">===</span> ymap <span class="token comment">// =&gt; true</span>

  <span class="token comment">// \u83B7\u53D6\u4FEE\u6539\u7684\u6570\u636E</span>
  <span class="token comment">// \u65B9\u6CD5\u4E00</span>
  ymapEvent<span class="token punctuation">.</span>keysChanged <span class="token comment">// =&gt; Set&lt;strings&gt;</span>
  <span class="token comment">// \u65B9\u6CD5\u4E8C</span>
  ymapEvent<span class="token punctuation">.</span>changes<span class="token punctuation">.</span>keys <span class="token comment">// =&gt; Map&lt;string, { action: &#39;add&#39;|&#39;update&#39;|&#39;delete&#39;, oldValue: any}&gt;</span>

  <span class="token comment">// sample code.</span>
  ymapEvent<span class="token punctuation">.</span>changes<span class="token punctuation">.</span>keys<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">change<span class="token punctuation">,</span> key</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>change<span class="token punctuation">.</span>action <span class="token operator">===</span> <span class="token string">&#39;add&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Property &quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>key<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot; was added. Initial value: &quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>ymap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot;.</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>change<span class="token punctuation">.</span>action <span class="token operator">===</span> <span class="token string">&#39;update&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Property &quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>key<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot; was updated. New value: &quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>ymap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot;. Previous value: &quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>change<span class="token punctuation">.</span>oldValue<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot;.</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>change<span class="token punctuation">.</span>action <span class="token operator">===</span> <span class="token string">&#39;delete&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Property &quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>key<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot; was deleted. New value: undefined. Previous value: &quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>change<span class="token punctuation">.</span>oldValue<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot;.</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

ymap<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&#39;key&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;value&#39;</span><span class="token punctuation">)</span> <span class="token comment">// =&gt; Property &quot;key&quot; was added. Initial value: &quot;value&quot;.</span>
ymap<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&#39;key&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;new&#39;</span><span class="token punctuation">)</span> <span class="token comment">// =&gt; Property &quot;key&quot; was updated. New value: &quot;new&quot;. Previous value: &quot;value&quot;.</span>
ymap<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span><span class="token string">&#39;key&#39;</span><span class="token punctuation">)</span> <span class="token comment">// =&gt; Property &quot;key&quot; was deleted. New value: undefined. Previous Value: &quot;new&quot;.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="y-mapevent-api" tabindex="-1"><a class="header-anchor" href="#y-mapevent-api" aria-hidden="true">#</a> Y.MapEvent API</h3><p><strong>ymapEvent.keysChanged: Set<code>&lt;string&gt;</code></strong></p><p>\u5305\u542B\u4E86\u5728\u4E00\u4E2A\u4E8B\u52A1\u4E2D\u6240\u6709\u503C\u88AB\u4FEE\u6539\u4E86\u7684\u952E\u7684Set</p><p>\u5176\u4ED6\u7684API\u90FD\u7EE7\u627F\u81EA<a href="https://docs.yjs.dev/api/y.event" target="_blank" rel="noopener noreferrer">Y.Event</a></p><h2 id="y-array" tabindex="-1"><a class="header-anchor" href="#y-array" aria-hidden="true">#</a> Y.Array</h2><p>\u4EE5\u7C7B\u4F3C\u5E8F\u5217\u7684\u7ED3\u6784\u5B58\u50A8\u7C7B\u578B\u7684\u5171\u4EAB\u6570\u636E\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> <span class="token constant">Y</span> <span class="token keyword">from</span> <span class="token string">&#39;yjs&#39;</span>

<span class="token keyword">const</span> ydoc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Y<span class="token punctuation">.</span>Doc</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment">// Y.Array\u53EF\u4EE5\u5B9A\u4E49\u4E3A\u9876\u7EA7\u7C7B\u578B\u6216\u8005\u5D4C\u5957\u7C7B\u578B</span>

<span class="token comment">// \u5728doc\u4E2D\u5B9A\u4E49\u4E00\u4E2A\u9876\u7EA7Array\u7C7B\u578B</span>
<span class="token keyword">const</span> yarray <span class="token operator">=</span> ydoc<span class="token punctuation">.</span><span class="token function">getArray</span><span class="token punctuation">(</span><span class="token string">&#39;my array type&#39;</span><span class="token punctuation">)</span> 
<span class="token comment">// \u65B0\u5EFA\u4E00\u4E2A\u5171\u4EABArray\u7C7B\u578B</span>
<span class="token keyword">const</span> yarrayNested <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Y<span class="token punctuation">.</span>Array</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment">// \u63D2\u5165\u5230\u5176\u4ED6\u5171\u4EAB\u7C7B\u578B\u4E2D</span>
yarray<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&#39;my nested array&#39;</span><span class="token punctuation">,</span> yarrayNested<span class="token punctuation">)</span>

<span class="token comment">// \u5E38\u7528\u65B9\u6CD5</span>
yarray<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment">// insert three elements</span>
yarray<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token comment">// delete second element </span>
yarray<span class="token punctuation">.</span><span class="token function">toArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// =&gt; [1, 3]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="api-1" tabindex="-1"><a class="header-anchor" href="#api-1" aria-hidden="true">#</a> API</h3><p><strong>Y.Array.from(Array&lt;JSON | Uint8Array | Y.AbstractType&gt;): Y.Array</strong></p><p>\u6839\u636E\u73B0\u6709\u6570\u636E\u521B\u5EFA\u6570\u7EC4</p><p><strong>yarray.doc: Y.Doc | null</strong> (readonly)</p><p>\u5F53\u524D\u6570\u7EC4\u7ED1\u5B9A\u7684\u6587\u6863\u5BF9\u8C61\uFF0C\u672A\u7ED1\u5B9A\u65F6\u4E3Anull</p><p><strong>yarray.parent: Y.AbstractType | null</strong></p><p>\u5F53\u524Darray\u7684\u7236\u5143\u7D20\u3002\u5F53\u524Darray\u4E3A\u9876\u5C42\u7C7B\u578B\u65F6\u8BE5\u5C5E\u6027\u4E3Anull</p><p><strong>yarray.insert(index: number, content: Array&lt;JSON | Uint8Array | Y.AbstractType&gt;)</strong></p><p>\u5728\u6307\u5B9A\u7D22\u5F15\u63D2\u5165\u5185\u5BB9\u3002\u51FA\u4E8E\u6027\u80FD\u8003\u8651\u63D2\u5165\u7684\u5185\u5BB9\u5E94\u8BE5\u65F6\u4E2A\u6570\u7EC4\uFF0C\u4F8B\u5982\u5728\u4E0B\u68070\u5904\u63D2\u5165\u6570\u5B571: <code>yarray.insert(0, [1])</code></p><p><strong>yarray.delete(index: number, length: number)</strong></p><p>\u4ECE\u7D22\u5F15\u5F00\u59CB\u5220\u9664length\u4E2A\u6570\u4E2A\u6570\u636E</p><p><strong>yarray.push(content: Array&lt;JSON | Uint8Array | Y.AbstractType&gt;)</strong></p><p>\u4ECE\u6570\u7EC4\u5C3E\u90E8\u63A8\u5165\u6570\u636E\uFF0C\u7C7B\u4F3C\u4E8E<code>yarray.insert(yarray.length, content)</code></p><p><strong>yarray.unshift(content: Array&lt;JSON | Uint8Array | Y.AbstractType&gt;)</strong></p><p>\u4ECE\u6570\u7EC4\u5934\u90E8\u63D2\u5165\u5143\u7D20\uFF0C\u7C7B\u4F3C\u4E8E<code>yarray.insert(0, content)</code></p><p><strong>yarray.get(index: number): JSON | Uint8Array | Y.AbstractType</strong></p><p>Retrieve the n-th element.</p><p><strong>yarray.slice([start: number [, end: number]]): Array&lt;JSON | Uint8Array | Y.AbstractType&gt;</strong></p><p>\u8FD4\u56DE<code>start</code>(\u5305\u62EC)\u5230<code>end</code>(\u4E0D\u5305\u62EC)\u3002\u8D1F\u503C\u53EF\u7528\u4E8E\u8868\u793A\u4ECE\u672B\u5C3E\u5F00\u59CB\uFF0C\u4F8B\u5982\u83B7\u53D6\u6700\u540E\u4E00\u4E2A\u5143\u7D20<code>yarray.slice(-1)</code>;\u83B7\u53D6\u6700\u540E\u4E00\u4E2A\u5143\u7D20\u5916\u7684\u6240\u6709\u5143\u7D20<code>yarray.slice(0, -1)</code></p><p><strong>yarray.toJSON(): Array&lt;JSON | Uint8Array&gt;</strong></p><p>\u83B7\u53D6\u5F53\u524D\u5171\u4EABarray\u7684json\u683C\u5F0F\u6570\u636E\u3002\u5F97\u5230\u7684\u8FD4\u56DE\u503C\u662F\u4E00\u4E2A\u5305\u542B\u6240\u6709\u5143\u7D20\u7684\u65B0\u6570\u7EC4\uFF0C\u6570\u7EC4\u5185\u90E8\u7684\u5171\u4EAB\u7C7B\u578B\u540C\u6837\u4F1A\u8C03\u7528\u81EA\u8EAB\u7684toJSON\u65B9\u6CD5\u8F6C\u6362\u4E3Ajson\u683C\u5F0F\u3002\u6CE8\u610F\u7ED3\u679C\u53EF\u80FD\u5305\u542B\u4E0D\u53EFjson\u7F16\u7801\u7684Uint8Arrays\u683C\u5F0F\u3002</p><p><strong>yarray.forEach(function(value: any, index: number, yarray: Y.Array))</strong></p><p>\u5BF9\u6BCF\u4E2A\u5143\u7D20\u8C03\u7528\u51FD\u6570\u3002\u53EF\u4EE5\u7406\u89E3\u6210js\u6570\u7EC4\u7684forEach</p><p><strong>yarray.map(function(value: any, index: number, yarray: Y.Array): T): Array</strong></p><p>\u5BF9\u6BCF\u4E2A\u5143\u7D20\u8C03\u7528\u51FD\u6570\u5E76\u5C06\u8FD4\u56DE\u503C\u4F5C\u4E3A\u4E00\u4E2A\u6570\u7EC4\u8FD4\u56DE\u3002\u53EF\u4EE5\u7406\u89E3\u6210js\u6570\u7EC4\u7684map</p><p><strong>yarray[Symbol.Iterator]: Iterator</strong></p><p>\u8FD4\u56DE\u5171\u4EAB\u6570\u7EC4\u7684\u8FED\u4EE3\u5668\uFF0C\u53EF\u4EE5\u901A\u8FC7for...of...\u8FED\u4EE3<code>for (const value of yarray) { .. }</code></p><p><strong>yarray.clone(): Y.Array</strong></p><p>\u514B\u9686\u5F53\u524D\u5171\u4EAB\u6570\u7EC4\u3002</p><p><strong>yarray.observe(function(YArrayEvent, Transaction))</strong></p><p>\u6DFB\u52A0\u76D1\u542C\uFF0C\u548C\u4E0A\u8FF0\u7684Y.Map\u7684observe\u4E00\u81F4\u3002</p><p><strong>yarray.unobserve(function)</strong></p><p>\u53C2\u8003\u4E0A\u8FF0Y.Map</p><p><strong>yarray.observeDeep(function(Array&lt;Y.Event&gt;, Transaction))</strong></p><p>\u53C2\u8003\u4E0A\u8FF0Y.Map</p><p><strong>yarray.unobserveDeep(function)</strong></p><h3 id="\u901A\u8FC7\u4E00\u4E2A\u793A\u4F8B\u6765\u4E86\u89E3observe\u7684\u4F7F\u7528-1" tabindex="-1"><a class="header-anchor" href="#\u901A\u8FC7\u4E00\u4E2A\u793A\u4F8B\u6765\u4E86\u89E3observe\u7684\u4F7F\u7528-1" aria-hidden="true">#</a> \u901A\u8FC7\u4E00\u4E2A\u793A\u4F8B\u6765\u4E86\u89E3observe\u7684\u4F7F\u7528</h3><p>yjs\u4F7F\u7528\u57FA\u4E8Edelta format(\u589E\u91CF\u6570\u636E\u683C\u5F0F)\u7684\u6570\u636E\u6765\u63CF\u8FF0\u6570\u7EC4\u7684\u53D8\u5316\uFF0C\u8FD9\u79CD\u6570\u636E\u683C\u5F0F\u662F\u4E00\u4E2A\u6570\u7EC4\uFF0Cdelta format\u4EE5\u53CAY.ArrayEvent\u7684\u8BE6\u7EC6\u4FE1\u606F\u524D\u5F80<a href="https://docs.yjs.dev/api/y.event#delta-format" target="_blank" rel="noopener noreferrer">Y.Event API</a>\u67E5\u770B\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>yarray<span class="token punctuation">.</span><span class="token function">observe</span><span class="token punctuation">(</span><span class="token parameter">yarrayEvent</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  yarrayEvent<span class="token punctuation">.</span>target <span class="token operator">===</span> yarray <span class="token comment">// =&gt; true</span>

  <span class="token comment">// Find out what changed: </span>
  <span class="token comment">// Log the Array-Delta Format to calculate the difference to the last observe-event</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>yarrayEvent<span class="token punctuation">.</span>changes<span class="token punctuation">.</span>delta<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

yarray<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment">// =&gt; [{ insert: [1, 2, 3] }]</span>
yarray<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token comment">// [{ retain: 2 }, { delete: 1 }]</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>yarray<span class="token punctuation">.</span><span class="token function">toArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// =&gt; [1, 2]</span>

<span class="token comment">// The delta-format is very useful when multiple changes</span>
<span class="token comment">// are performed in a single transaction</span>
ydoc<span class="token punctuation">.</span><span class="token function">transact</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  yarray<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
  yarray<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token comment">// deletes &#39;b&#39; and 2</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment">// =&gt; [{ retain: 1 }, { insert: [&#39;a&#39;] }, { delete: 1 }]</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>yarray<span class="token punctuation">.</span><span class="token function">toArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// =&gt; [1, &#39;a&#39;]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="y-text" tabindex="-1"><a class="header-anchor" href="#y-text" aria-hidden="true">#</a> Y.Text</h2><p>\u4E00\u79CD\u63CF\u8FF0\u6587\u672C\u548C\u5BCC\u6587\u672C\u7C7B\u578B\u7684\u5171\u4EAB\u7C7B\u578B\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> <span class="token constant">Y</span> <span class="token keyword">from</span> <span class="token string">&#39;yjs&#39;</span>

<span class="token keyword">const</span> ydoc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Y<span class="token punctuation">.</span>Doc</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment">// You can define a Y.Text as a top-level type or a nested type</span>

<span class="token comment">// Method 1: Define a top-level type</span>
<span class="token keyword">const</span> ytext <span class="token operator">=</span> ydoc<span class="token punctuation">.</span><span class="token function">getText</span><span class="token punctuation">(</span><span class="token string">&#39;my text type&#39;</span><span class="token punctuation">)</span> 
<span class="token comment">// Method 2: Define Y.Text that can be included into the Yjs document</span>
<span class="token keyword">const</span> ytextNested <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Y<span class="token punctuation">.</span>Text</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment">// Nested types can be included as content into any other shared type</span>
ydoc<span class="token punctuation">.</span><span class="token function">getMap</span><span class="token punctuation">(</span><span class="token string">&#39;another shared structure&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&#39;my nested text&#39;</span><span class="token punctuation">,</span> ytextNested<span class="token punctuation">)</span>

<span class="token comment">// Common methods</span>
ytext<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">&#39;abc&#39;</span><span class="token punctuation">)</span> <span class="token comment">// insert three elements</span>
ytext<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">bold</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment">// delete second element </span>
ytext<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// =&gt; &#39;abc&#39;</span>
ytext<span class="token punctuation">.</span><span class="token function">toDelta</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// =&gt; [{ insert: &#39;a&#39; }, { insert: &#39;bc&#39;, attributes: { bold: true }}]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="api-2" tabindex="-1"><a class="header-anchor" href="#api-2" aria-hidden="true">#</a> API</h3><p><strong>ytext = new Y.Text(initialContent): Y.Text</strong></p><p>\u4F7F\u7528\u73B0\u6709\u5185\u5BB9\u521B\u5EFA\u3002</p><p><strong>ytext.doc: Y.Doc | null</strong> (readonly)</p><p>\u5F53\u524D\u7C7B\u578B\u7ED1\u5B9A\u5230\u7684\u6587\u6863\u5BF9\u8C61</p><p><strong>ytext.parent: Y.AbstractType | null</strong>(readonly)</p><p>\u5F53\u524D\u7C7B\u578B\u7684\u7236\u8282\u70B9</p><p><strong>ytext.length: number</strong>(readonly)</p><p>\u6587\u672C\u957F\u5EA6</p><p><strong>ytext.insert(index: number, content: string[, format: Object&lt;string,any&gt;])</strong></p><p>\u5728\u6307\u5B9A\u4F4D\u7F6E\u63D2\u5165\u6587\u672C\u3002\u53EF\u901A\u8FC7format\u6765\u8BBE\u7F6E\u4E00\u4E9B\u5C5E\u6027\u3002\u5982\u679C\u4E0D\u8BBE\u7F6E\u5C5E\u6027\u9ED8\u8BA4\u4F1A\u91C7\u7528\u4E4B\u524D\u6587\u672C\u7684\u5C5E\u6027\u3002</p><p><strong>ytext.format(index: number, length: number, format: Object&lt;string,any&gt;)</strong></p><p>\u5BF9\u6587\u672C\u5E94\u7528\u5C5E\u6027</p><p><strong>ytext.applyDelta(delta: Delta)</strong></p><p>\u5C06\u5FB7\u5C14\u5854\u6587\u672C\u5E94\u7528\u5230\u6587\u672C</p><p><strong>ytext.delete(index: number, length: number)</strong></p><p>\u5220\u9664\u4ECE\u6307\u5B9A\u7D22\u5F15\u5F00\u59CB\u957F\u5EA6\u4E3Alength\u7684\u6587\u672C</p><p><strong>ytext.toString(): string</strong></p><p>\u5C06Y.Text\u8F6C\u6362\u6210\u4E0D\u5E26\u5C5E\u6027\u7684\u7EAF\u6587\u672C</p><p><strong>ytext.toDelta(): Delta</strong></p><p>\u5C06\u5171\u4EAB\u6587\u672C\u8F6C\u5316\u4E3A\u5FB7\u5C14\u5854\u683C\u5F0F\uFF0C\u8F6C\u6362\u540E\u7684\u5FB7\u5C14\u5854\u683C\u5F0F\u548CQuill\u5BCC\u6587\u672C\u7F16\u8F91\u5668\u7684\u4E00\u81F4\u3002</p><p><strong>ytext.toJSON(): string</strong></p><p>\u5C06\u5171\u4EAB\u6587\u672C\u8F6C\u6362\u4E3Ajson\u683C\u5F0F</p><p><strong>ytext.clone(): Y.Text</strong></p><p>\u514B\u9686\u5F53\u524D\u5171\u4EAB\u6587\u672C</p><p><strong>ytext.observe(function(YTextEvent, Transaction))</strong></p><p>\u6DFB\u52A0\u52A0\u76D1\u542C</p><p><strong>ytext.unobserve(function)</strong></p><p>\u6CE8\u9500\u76D1\u542C</p><p><strong>ytext.observeDeep(function(Array&lt;Y.Event&gt;, Transaction))</strong></p><p>\u6DFB\u52A0\u6DF1\u5C42\u76D1\u542C</p><p><strong>ytext.unobserveDeep(function)</strong></p><h3 id="delta-format-delta-format-md" tabindex="-1"><a class="header-anchor" href="#delta-format-delta-format-md" aria-hidden="true">#</a> [Delta Format](./Delta Format.md)</h3><h3 id="\u4E0B\u4F8B\u662F\u4E00\u4E2A\u76D1\u542C\u5171\u4EAB\u6587\u672C\u53D8\u5316\u7684\u793A\u4F8B" tabindex="-1"><a class="header-anchor" href="#\u4E0B\u4F8B\u662F\u4E00\u4E2A\u76D1\u542C\u5171\u4EAB\u6587\u672C\u53D8\u5316\u7684\u793A\u4F8B" aria-hidden="true">#</a> \u4E0B\u4F8B\u662F\u4E00\u4E2A\u76D1\u542C\u5171\u4EAB\u6587\u672C\u53D8\u5316\u7684\u793A\u4F8B\uFF1A</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>yarray<span class="token punctuation">.</span><span class="token function">observe</span><span class="token punctuation">(</span><span class="token parameter">yarrayEvent</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  yarrayEvent<span class="token punctuation">.</span>target <span class="token operator">===</span> yarray <span class="token comment">// =&gt; true</span>

  <span class="token comment">// Find out what changed: </span>
  <span class="token comment">// Option 1: A set of keys that changed</span>
  ymapEvent<span class="token punctuation">.</span>keysChanged <span class="token comment">// =&gt; Set&lt;strings&gt;</span>
  <span class="token comment">// Option 2: Compute the differences</span>
  ymapEvent<span class="token punctuation">.</span>changes<span class="token punctuation">.</span>keys <span class="token comment">// =&gt; Map&lt;string, { action: &#39;add&#39;|&#39;update&#39;|&#39;delete&#39;, oldValue: any}&gt;</span>
  
  <span class="token comment">// sample code.</span>
  yarrayEvent<span class="token punctuation">.</span>changes<span class="token punctuation">.</span>keys<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">change<span class="token punctuation">,</span> key</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>change<span class="token punctuation">.</span>action <span class="token operator">===</span> <span class="token string">&#39;add&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Property &quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>key<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot; was added. Initial value: &quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>ymap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot;.</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>change<span class="token punctuation">.</span>action <span class="token operator">===</span> <span class="token string">&#39;update&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Property &quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>key<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot; was updated. New value: &quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>ymap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot;. Previous value: &quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>change<span class="token punctuation">.</span>oldValue<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot;.</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>change<span class="token punctuation">.</span>action <span class="token operator">===</span> <span class="token string">&#39;delete&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Property &quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>key<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot; was deleted. New value: undefined. Previous value: &quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>change<span class="token punctuation">.</span>oldValue<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot;.</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

ymap<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&#39;key&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;value&#39;</span><span class="token punctuation">)</span> <span class="token comment">// =&gt; Property &quot;key&quot; was added. Initial value: &quot;value&quot;.</span>
ymap<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&#39;key&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;new&#39;</span><span class="token punctuation">)</span> <span class="token comment">// =&gt; Property &quot;key&quot; was updated. New value: &quot;new&quot;. Previous value: &quot;value&quot;.</span>
ymap<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span><span class="token string">&#39;key&#39;</span><span class="token punctuation">)</span> <span class="token comment">// =&gt; Property &quot;key&quot; was deleted. New value: undefined. Previous Value: &quot;new&quot;.</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="y-textevent-api" tabindex="-1"><a class="header-anchor" href="#y-textevent-api" aria-hidden="true">#</a> Y.TextEvent API</h3>`,129),k=n("\u7EE7\u627F\u81EA"),d=n("Y.Event"),m=p(`<h2 id="y-xmlfragment" tabindex="-1"><a class="header-anchor" href="#y-xmlfragment" aria-hidden="true">#</a> Y.XmlFragment</h2><p><strong>\u4E00\u79CD\u7528\u6765\u7BA1\u7406Y.Xml\u7C7B\u578B\u96C6\u5408\u7684\u5171\u4EAB\u7C7B\u578B\u3002</strong></p><p>xml\u548Cjson\u4E00\u6837\u662F\u4E00\u79CD\u5171\u4EAB\u6570\u636E\u7684\u683C\u5F0F\uFF0C\u5FAE\u8F6F\u7684office\u6587\u6863\u5C31\u662F\u4F7F\u7528xml\u683C\u5F0F\u8868\u793A\u7684\u3002\u540C\u65F6\u7531\u4E8Exml\u683C\u5F0F\u7C7B\u4F3C\u4E8Ehtml\u6587\u672C\uFF0C\u6240\u4EE5\u53EF\u4EE5\u76F4\u63A5\u5728\u6D4F\u89C8\u5668\u4E0A\u663E\u793A\u6216\u8005\u8F6C\u6362\u4E3A\u6D4F\u89C8\u5668dom\uFF0C\u6BD4\u5982\u4E0B\u9762\u8FD9\u4E2A\u793A\u4F8B\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> <span class="token constant">Y</span> <span class="token keyword">from</span> <span class="token string">&#39;yjs&#39;</span>

<span class="token keyword">const</span> ydoc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Y<span class="token punctuation">.</span>Doc</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment">// You can define a Y.XmlFragment as a top-level type or a nested type</span>

<span class="token comment">// Method 1: Define a top-level type</span>
<span class="token keyword">const</span> yxmlFragment <span class="token operator">=</span> ydoc<span class="token punctuation">.</span><span class="token function">getXmlFragment</span><span class="token punctuation">(</span><span class="token string">&#39;my xml fragment&#39;</span><span class="token punctuation">)</span>
<span class="token comment">// Method 2: Define Y.XmlFragment that can be included into the Yjs document</span>
<span class="token keyword">const</span> yxmlNested <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Y<span class="token punctuation">.</span>XmlFragment</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment">// Common methods</span>
<span class="token keyword">const</span> yxmlText <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Y<span class="token punctuation">.</span>XmlText</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment">//Y.XmlFragment\u63D2\u5165\u5143\u7D20\u9700\u8981\u901A\u8FC7\u6570\u7EC4\u63D2\u5165</span>
yxmlFragment<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>yxmlText<span class="token punctuation">]</span><span class="token punctuation">)</span>
yxmlFragment<span class="token punctuation">.</span>firstChild <span class="token operator">===</span> yxmlText
yxmlFragment<span class="token punctuation">.</span><span class="token function">insertAfter</span><span class="token punctuation">(</span>yxmlText<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token keyword">new</span> <span class="token class-name">Y<span class="token punctuation">.</span>XmlElement</span><span class="token punctuation">(</span><span class="token string">&#39;node-name&#39;</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
yxmlFragment<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">===</span> yxmlText <span class="token comment">// =&gt; true</span>

<span class="token comment">//show result in dev console</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>yxmlFragment<span class="token punctuation">.</span><span class="token function">toDOM</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="api-3" tabindex="-1"><a class="header-anchor" href="#api-3" aria-hidden="true">#</a> API</h3><p><strong>yxmlFragment.doc: Y.Doc | null</strong>(readonly)</p><p><strong>yxmlFragment.parent: Y.AbstractType | null</strong></p><p><strong>yxmlFragment.firstChild: Y.XmlElement | Y.XmlText | null</strong></p><p>\u7B2C\u4E00\u4E2A\u5B50\u5143\u7D20</p><p><strong>yxmlFragment.length: number</strong></p><p>\u5B50\u5143\u7D20\u4E2A\u6570</p><p><strong>yxmlFragment.insert(index: number, content: Array&lt;Y.XmlElement | Y.XmlText&gt;)</strong></p><p><strong>yxmlFragment.insertAfter(ref: Y.XmlElement | Y.XmlText | null, content: Array&lt;Y.XmlElement | Y.XmlText&gt;)</strong></p><p>\u5728\u6307\u5B9A\u5F15\u7528\u7684\u5143\u7D20\u540E\u63D2\u5165\u5143\u7D20\uFF0C\u9700\u8981\u6CE8\u610F\u7684\u662F\u5982\u679C\u5F15\u7528(ref)\u4E3A\u7A7A\u90A3\u4E2A\u5C06\u4F1A\u5728\u5F00\u59CB\u63D2\u5165\u5143\u7D20\u3002</p><p><strong>yxmlFragment.delete(index: number, length: number)</strong></p><p>\u540CY.Array</p><p><strong>yxmlFragment.push(content: Array&lt;Y.XmlElement | Y.XmlText&gt;)</strong></p><p>\u540CY.Array</p><p><strong>yxmlFragment.unshift(content: Array&lt;Y.XmlElement | Y.XmlText&gt;)</strong></p><p>\u540CY.Array</p><p><strong>yxmlFragment.get(index: number): Y.XmlElement | Y.XmlText</strong></p><p><strong>yxmlFragment.slice([start: number [, end: number]]): Array&lt;Y.XmlElement | Y.XmlText&gt;</strong></p><p>\u540CY.Array</p><p><strong>yxmlFragment.toJSON(): String</strong></p><p>\u8F6C\u5316\u4E3Ajson\u683C\u5F0F\u3002\u8FD4\u56DE\u7684\u7ED3\u679C\u662F\u4E32\u8054\u7684xml\u5B57\u7B26\u4E32:</p><p><code>&lt;element1&gt;foo&lt;/element1&gt;&lt;element2&gt;bar&lt;/element2&gt;</code></p><p>If the fragment contains more than one XML element, the output will not be a valid XML; It will need to be placed inside a container element to be valid and parsable.(\u5982\u679C\u7247\u6BB5\u5185\u5305\u542B\u591A\u4E2Axml\u5143\u7D20\uFF0C\u90A3\u4E48\u8FD4\u56DE\u503C\u5C06\u4E0D\u662F\u4E00\u4E2A\u5408\u6CD5\u7684XML\u7ED3\u6784\u3002\u9700\u8981\u5C06\u5176\u5305\u88F9\u5B50\u5728\u4E00\u4E2A\u5143\u7D20\u4E2D\u624D\u80FD\u6B63\u5E38\u89E3\u6790):</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> validDocument <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">&lt;wrapper&gt;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>yXmlFragment<span class="token punctuation">.</span><span class="token function">toJSON</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&lt;/wrapper&gt;</span><span class="token template-punctuation string">\`</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>yxmlFragment.createTreeWalker(filter: function(yxml: Y.XmlElement | Y.XmlText): boolean): Iterable</strong></p><p>\u8BE5\u51FD\u6570\u4F1A\u904D\u5386\u6240\u6709\u540E\u4EE3(\u4E0D\u4EC5\u4EC5\u662F\u76F4\u63A5\u5B50\u4EE3)\uFF0C\u5E76\u8C03\u7528filter\u65B9\u6CD5\u6267\u884C\u8FC7\u6EE4\uFF0C\u6700\u540E\u8FD4\u56DE\u6EE1\u8DB3\u8FC7\u6EE4\u6761\u4EF6\u7684\u5143\u7D20\u7684\u8FED\u4EE3\u5668\u3002\u6BD4\u5982\u8FC7\u6EE4\u51FA\u6240\u6709\u7684p\u8282\u70B9:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// Log all &lt;p&gt; nodes that are children of this Y.XmlFragment</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> paragraph <span class="token keyword">of</span> yxmlFragment<span class="token punctuation">.</span><span class="token function">createTreeWalker</span><span class="token punctuation">(</span><span class="token parameter">yxml</span> <span class="token operator">=&gt;</span> yxml<span class="token punctuation">.</span>nodeName <span class="token operator">===</span> <span class="token string">&#39;p&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>yxmlFragment.clone(): Y.XmlFragment</strong></p><p><strong>toDOM():DocumentFragment</strong></p><p>\u8F6C\u6362\u4E3ADOM\u8282\u70B9</p><p><strong>yxmlFragment.observe(function(Y.XmlEvent, Transaction))</strong></p><p><strong>yxmlFragment.unobserve(function)</strong></p><p><strong>yxmlFragment.observeDeep(function(Array&lt;Y.Event&gt;, Transaction))</strong></p><p><strong>yxmlFragment.unobserveDeep(function)</strong></p><h3 id="\u4EE5\u4E0B\u662F\u4E00\u4E2A\u76D1\u542Cy-xmlfragment\u53D8\u5316\u7684\u793A\u4F8B" tabindex="-1"><a class="header-anchor" href="#\u4EE5\u4E0B\u662F\u4E00\u4E2A\u76D1\u542Cy-xmlfragment\u53D8\u5316\u7684\u793A\u4F8B" aria-hidden="true">#</a> \u4EE5\u4E0B\u662F\u4E00\u4E2A\u76D1\u542CY.XmlFragment\u53D8\u5316\u7684\u793A\u4F8B:</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>yxmlFragment<span class="token punctuation">.</span><span class="token function">observe</span><span class="token punctuation">(</span><span class="token parameter">yxmlElent</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  yxmlEvent<span class="token punctuation">.</span>target <span class="token operator">===</span> yarray <span class="token comment">// =&gt; true</span>

  <span class="token comment">// Observe when child-elements are added or deleted. </span>
  <span class="token comment">// Log the Xml-Delta Format to calculate the difference to the last observe-event</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>yxmlEvent<span class="token punctuation">.</span>changes<span class="token punctuation">.</span>delta<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

yxmlFragment<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token keyword">new</span> <span class="token class-name">Y<span class="token punctuation">.</span>XmlText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment">// =&gt; [{ insert: [yxmlText] }]</span>
yxmlFragment<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token comment">// [{ delete: 1 }]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="y-xmlevent-api" tabindex="-1"><a class="header-anchor" href="#y-xmlevent-api" aria-hidden="true">#</a> Y.XmlEvent API</h3>`,41),v=n("\u7EE7\u627F\u81EA"),y=n("Y.Event");function g(b,h){const s=c("RouterLink");return l(),i("div",null,[r,a("p",null,[k,t(s,{to:"/posts/documents/yjs.js/Y.Event.html"},{default:e(()=>[d]),_:1})]),m,a("p",null,[v,t(s,{to:"/posts/documents/yjs.js/Y.Event.html"},{default:e(()=>[y]),_:1})])])}var x=o(u,[["render",g],["__file","Shared Types.html.vue"]]);export{x as default};
